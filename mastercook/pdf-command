case $(uname -s) in
    Darwin) sed=gsed
            tr=gtr ;;
    *) sed=sed
       tr=tr 
    ;;
esac

startdate=$(date)

rm -f index-new.html
rm -f index.html
if [ ! -d recipes ]; then
    echo "Recipe directory does not exist"
    exit 1
fi

if [ "$(ls -A recipes)" ]; then
    echo "No recipes to convert"
    exit 1
fi

cd recipes

for recipe in *
do
    recipestart=$(echo "${recipe:0:1}")
    case $recipestart in
    [a-zA-Z0-9]) : ;;
    *) 
        reciperename=$(echo $recipe | cut -c2-)
        mv "$recipe" "$reciperename"
        ;;
    esac
done

for rawfile in *.txt
do
    nospacefile="${rawfile// /}"
    linkname="$( echo "${rawfile%????}" | $sed -e "s/\b\(.\)/\u\1/g")"
    pdffile=${nospacefile%????}.pdf

    alphadir="$(echo "${nospacefile:0:1}" | $tr '[a-z]' '[A-Z]')"
    nospacefile="$alphadir/$nospacefile"
    pdffile="$alphadir/$pdffile"

    if [ "$skipto" != "$alphadir" ]; then
        skipto=$alphadir
        mkdir -p ../tmp/{recipes,pdf}/${skipto}
        echo "<a id=\"$skipto\"></a>" >> ../index-$skipto.html
        echo "<h3> == $skipto == </h3>" >> ../index-$skipto.html
        echo -n "$skipto.. "
    fi

    echo -n "<a href=\"pdf-recipes/" >> ../index-$skipto.html
    echo -n "${pdffile}" >> ../index-$skipto.html
    echo -n "\"> " >> ../index-$skipto.html 
    echo -n "${linkname}" >> ../index-$skipto.html
    echo " </a><p>" >> ../index-$skipto.html

    if [ ! -e ../tmp/recipes/${nospacefile} ]; then

        iconv -f utf-8 -t utf-8 -c "${rawfile}" | tr -d '\r' > ../tmp/recipes/${nospacefile}

        printf '%s\n' 'g/^\* Exported from MasterCook \*$/+2s/^/# /' w | ed -s ../tmp/recipes/${nospacefile}
        $sed -i -e '0,/Exported from MasterCook.*/{/Exported from MasterCook.*/d;}' ../tmp/recipes/$nospacefile
        $sed -i -e 's/Exported from MasterCook.*/\\newpage'/g ../tmp/recipes/$nospacefile
        $sed -i -e '/Recipe By.*\:.*/d' ../tmp/recipes/$nospacefile
        $sed -i -e '/Categories.*\:.*/d' ../tmp/recipes/$nospacefile
        $sed -i -e 's/Preparation Time.*//' ../tmp/recipes/$nospacefile
        $sed -i -e "/Per Serving/,/0 0 0 0 0/d" ../tmp/recipes/$nospacefile
        $sed -i -e "/- - - - - - -.*/d" ../tmp/recipes/$nospacefile
    fi 

    if [ ! -e ../tmp/pdf/${pdffile} ]; then
        pandoc --pdf-engine=xelatex -V 'mainfont:Rockwell-Regular' -V 'mainfontoptions:BoldFont=Rockwell-Bold' ../tmp/recipes/$nospacefile -V geometry:margin=2cm -o ../tmp/pdf/${pdffile}
        if [ "$?" != "0" ]; then
            echo "PDF failed for $(basename ${pdffile})"
            exit 1
        fi
    fi
done 

cd ..

echo "<head>" > index-top.html
echo "<title>Recipes</title>" >> index-top.html
echo "</head>" >> index-top.html
echo "<h1>Recipes</h1>" >> index-top.html

for letter in $(ls index-?.html | cut -c 7)
do
    echo "<a href=\"#$letter\"> $letter</a>" >> index-top.html
done
echo "<p>" >> index-top.html

cat index-top.html index-?.html > index.html
rm index-*.html

echo
echo "Start date is $startdate"
echo "End date is $(date)"

case "$1" in
aws) s3cmd -c ~/.aws/.s3cfg -P put index.html s3://www.colinburns.com/food/
     s3cmd -c ~/.aws/.s3cfg -P put --recursive tmp/pdf/* s3://www.colinburns.com/food/pdf-recipes/
     ;;
esac
