case "$1" in
aws) 
     echo "Pushing index.html to aws"
     s3cmd -c ~/.aws/.s3cfg -q --progress -P put index.html s3://www.colinburns.com/food/ &> /tmp/awspush
     if [ "$?" != "0" ]; then 
        echo "Push problem with index.html"
        exit 1
     fi
     echo "Pushed index.html to aws"
     echo "Pushing recipes to aws"
     s3cmd -c ~/.aws/.s3cfg -q --progress -P put --recursive tmp/pdf/* s3://www.colinburns.com/food/pdf-recipes/ &> /tmp/awspush
     if [ "$?" != "0" ]; then 
        echo "Push problem with recipes"
        exit 1
     fi
     rm -f /tmp/awspush
     echo "Pushed file to aws"
     exit 0
     ;;
esac

case $(uname -s) in
    Darwin) sed=gsed
            tr=gtr ;;
    *) sed=sed
       tr=tr 
    ;;
esac

startdate=$(date)

rm -f index-new.html
rm -f index.html
if [ ! -d recipes ]; then
    echo "Recipe directory does not exist"
    exit 1
fi

if [ -z "$(ls -A recipes)" ]; then
    echo "No recipes to convert"
    exit 1
fi

cd recipes

for recipe in *
do
    recipestart=$(echo "${recipe:0:1}")
    case $recipestart in
    [A-Z0-9]) : ;;
    [a-z])
        reciperename=$(echo "$recipe" | $sed 's/\([a-z]\)\([a-zA-Z0-9]*\)/\u\1\2/')
        mv "$recipe" "$reciperename"
        ;;
    *) 
        reciperename=$(echo $recipe | cut -c2-)
        mv "$recipe" "$reciperename"
        ;;
    esac
done

for rawfile in *.txt
do
    nospacefile="${rawfile// /}"
    linkname="$( echo "${rawfile%????}" | $sed -e "s/\b\(.\)/\u\1/g")"
    pdffile=${nospacefile%????}.pdf

    alphadir="$(echo "${nospacefile:0:1}" | $tr '[a-z]' '[A-Z]')"
    nospacefile="$alphadir/$nospacefile"
    pdffile="$alphadir/$pdffile"

    if [ "$skipto" != "$alphadir" ]; then
        skipto=$alphadir
        mkdir -p ../tmp/{recipes,pdf}/${skipto}
        echo "<a id=\"$skipto\"></a>" >> ../index-$skipto.html
        echo "<hr>" >> ../index-$skipto.html
        echo "<p><svg height=\"20\" width=\"20\">" >> ../index-$skipto.html
        echo "<circle r=\"8\" cx=\"10\" cy=\"10\" stroke=\"black\" stroke-width=\"2\" fill=\"dimgray\" />" >> ../index-$skipto.html
        echo "</svg>" >> ../index-$skipto.html
        echo "<font size=\"+1\">&nbsp;<b>$skipto</b>&nbsp;&nbsp;&nbsp;</font>" >> ../index-$skipto.html       
        #echo "<h3>&nbsp;$skipto&nbsp;</h3>" >> ../index-$skipto.html
        echo "<a id=\"back2Top\" title=\"Top\" href=\"#\">&#10148;</a>" >> ../index-$skipto.html
        echo "&nbsp; Top <p>" >> ../index-$skipto.html 
        echo -n "$skipto.. "
    fi

    echo -n "<a href=\"pdf-recipes/" >> ../index-$skipto.html
    echo -n "${pdffile}" >> ../index-$skipto.html
    echo -n "\"> " >> ../index-$skipto.html 
    echo -n "${linkname}" >> ../index-$skipto.html
    echo " </a>" >> ../index-$skipto.html
    echo "&nbsp;&nbsp;" >> ../index-$skipto.html
    echo "<svg height=\"10\" width=\"10\">" >> ../index-$skipto.html
    echo "<circle r=\"4\" cx=\"5\" cy=\"5\" stroke=\"black\" stroke-width=\"1\" fill=\"dimgray\" />" >> ../index-$skipto.html
    echo "</svg>" >> ../index-$skipto.html
    echo "&nbsp;&nbsp;" >> ../index-$skipto.html

    if [ ! -e ../tmp/recipes/${nospacefile} ]; then

        iconv -f utf-8 -t utf-8 -c "${rawfile}" | tr -d '\r' > ../tmp/recipes/${nospacefile}

        printf '%s\n' 'g/^\* Exported from MasterCook \*$/+2s/^/\\begin{center}\\Huge /' w | ed -s ../tmp/recipes/${nospacefile}
        $sed -i -e '/\\begin{center}\\Huge/s/$/\\end{center}\\normalsize\\vskip 0.2cm/' ../tmp/recipes/${nospacefile}
        $sed -i -e '0,/Exported from MasterCook.*/{/Exported from MasterCook.*/d;}' ../tmp/recipes/$nospacefile
        $sed -i -e 's/Exported from MasterCook.*/\\newpage'/g ../tmp/recipes/$nospacefile
        $sed -i -e '/Recipe By.*\:.*/d' ../tmp/recipes/$nospacefile
        $sed -i -e '/Categories.*\:.*/d' ../tmp/recipes/$nospacefile
        $sed -i -e 's/Preparation Time.*//' ../tmp/recipes/$nospacefile
        $sed -i -e '/Serving Size/ s/.*/\\small\\centerline{\\textit{&}}\\normalsize/' ../tmp/recipes/$nospacefile
        $sed -i -e "/Per Serving/,/0 0 0 0 0/d" ../tmp/recipes/$nospacefile
        $sed -i -e "/- - - - - - -.*/d" ../tmp/recipes/$nospacefile
        $sed -i -e 's/\&/\\\&/g' ../tmp/recipes/$nospacefile
        $sed -i -e '/Serving Size  \: 0/d' ../tmp/recipes/$nospacefile
        $sed -i -e 's/Serving Size  \:/Servings \:/g' ../tmp/recipes/$nospacefile
    fi 

    if [ ! -e ../tmp/pdf/${pdffile} ]; then
        rm -f pandoc.log
        pandoc --pdf-engine=xelatex -V 'mainfont:Rockwell-Regular' -V 'mainfontoptions:BoldFont=Rockwell-Bold' ../tmp/recipes/$nospacefile -V geometry:margin=2cm -o ../tmp/pdf/${pdffile} &> pandoc.log
        if [ "$?" != "0" ]; then
            echo "PDF failed for $(basename ${pdffile})"
            exit 1
        fi
    fi
done 

cd ..

echo "<head>" > index-top.html
echo "<title>Recipes</title>" >> index-top.html
echo "</head>" >> index-top.html
echo "<center><h1>Recipes</h1>" >> index-top.html

for letter in $(ls index-?.html | cut -c 7)
do
    echo "<a href=\"#$letter\"> <font size=\"+2\">$letter</font></a>" >> index-top.html
    echo "&nbsp;" >> index-top.html
done
echo "<p>" >> index-top.html
echo "</center>" >> index-top.html

cat index-top.html index-?.html > index.html
rm index-*.html

echo
echo "Start date is $startdate"
echo "End date is $(date)"
